swagger: "2.0"
info:
  title: GitHub Integration API for Power Platform
  description: Secure GitHub repository management API with Power Platform integration
  version: 1.0.0
  contact:
    name: API Support
    url: https://connectorcreator-fyduenajachkcxax.northcentralus-01.azurewebsites.net
  license:
    name: MIT

host: connectorcreator-fyduenajachkcxax.northcentralus-01.azurewebsites.net
basePath: /
schemes:
  - https

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  oauth2_auth:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://github.com/login/oauth/authorize
    tokenUrl: https://github.com/login/oauth/access_token
    scopes:
      repo: Repository access
      user: User information

security:
  - oauth2_auth: [repo, user]

paths:
  /:
    get:
      summary: API Information
      description: Home endpoint providing API information and available endpoints
      operationId: getApiInfo
      tags:
        - General
      responses:
        200:
          description: API information retrieved successfully
          schema:
            $ref: '#/definitions/StandardResponse'

  /login:
    get:
      summary: Initiate GitHub OAuth
      description: Start GitHub OAuth2 authentication flow
      operationId: initiateGitHubOAuth
      tags:
        - Authentication
      parameters:
        - name: callback_url
          in: query
          description: Power Platform callback URL for post-authentication redirect
          required: false
          type: string
          format: uri
      responses:
        302:
          description: Redirect to GitHub OAuth authorization page

  /callback:
    get:
      summary: OAuth Callback Handler
      description: Handle OAuth2 callback from GitHub after user authorization
      operationId: handleOAuthCallback
      tags:
        - Authentication
      parameters:
        - name: code
          in: query
          description: Authorization code from GitHub
          required: true
          type: string
        - name: debug
          in: query
          description: Enable debug mode for troubleshooting
          required: false
          type: string
          enum: [true, false]
      responses:
        200:
          description: Authentication successful
          schema:
            $ref: '#/definitions/StandardResponse'
        302:
          description: Redirect to Power Platform callback URL
        400:
          description: Bad request - missing authorization code
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Authentication failed
          schema:
            $ref: '#/definitions/ErrorResponse'

  /get_auth_token:
    get:
      summary: Get Authentication Token
      description: Alternative endpoint to exchange code for token (for debugging)
      operationId: getAuthToken
      tags:
        - Authentication
      parameters:
        - name: code
          in: query
          description: Authorization code from GitHub
          required: true
          type: string
      responses:
        200:
          description: Authentication successful
          schema:
            $ref: '#/definitions/StandardResponse'
        302:
          description: Redirect to Power Platform callback URL
        500:
          description: Authentication failed
          schema:
            $ref: '#/definitions/ErrorResponse'

  /authenticate:
    post:
      summary: Direct Token Authentication
      description: Authenticate directly with GitHub personal access token
      operationId: authenticateWithToken
      tags:
        - Authentication
      parameters:
        - name: github_token
          in: query
          description: GitHub personal access token
          required: true
          type: string
      responses:
        200:
          description: Authentication successful
          schema:
            $ref: '#/definitions/StandardResponse'
        401:
          description: Invalid GitHub token
          schema:
            $ref: '#/definitions/ErrorResponse'

  /auth/status:
    get:
      summary: Check Authentication Status
      description: Verify if user is currently authenticated with GitHub
      operationId: checkAuthStatus
      tags:
        - Authentication
      responses:
        200:
          description: Authentication status retrieved
          schema:
            $ref: '#/definitions/StandardResponse'

  /auth/check:
    get:
      summary: Power Platform Auth Check
      description: Check authentication status designed for Power Platform polling
      operationId: checkAuthForPowerPlatform
      tags:
        - Authentication
      parameters:
        - name: session_id
          in: query
          description: Optional session identifier
          required: false
          type: string
      responses:
        200:
          description: Authentication status for Power Platform
          schema:
            $ref: '#/definitions/StandardResponse'

  /modify_repo:
    post:
      summary: Modify Repository File
      description: Create or update a file in a GitHub repository
      operationId: modifyRepository
      tags:
        - Repository Operations
      parameters:
        - name: body
          in: body
          description: Repository modification request
          required: true
          schema:
            $ref: '#/definitions/ModifyRepoRequest'
      responses:
        200:
          description: File modified successfully
          schema:
            $ref: '#/definitions/StandardResponse'
        401:
          description: Authentication required
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Repository modification failed
          schema:
            $ref: '#/definitions/ErrorResponse'

  /clone_template:
    post:
      summary: Clone Template Repository
      description: Create a new repository from a GitHub template
      operationId: cloneTemplate
      tags:
        - Repository Operations
      parameters:
        - name: body
          in: body
          description: Clone template request
          required: false
          schema:
            $ref: '#/definitions/CloneTemplateRequest'
      responses:
        200:
          description: Repository cloned successfully
          schema:
            $ref: '#/definitions/StandardResponse'
        400:
          description: Bad request - invalid template or repository exists
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: Authentication required
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Template repository not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: Repository with same name already exists
          schema:
            $ref: '#/definitions/ErrorResponse'

  /clone_template_with_token:
    post:
      summary: Clone Template with Direct Token
      description: Create a new repository from a template using direct token authentication
      operationId: cloneTemplateWithToken
      tags:
        - Repository Operations
      parameters:
        - name: github_token
          in: query
          description: GitHub personal access token
          required: true
          type: string
        - name: body
          in: body
          description: Clone template request
          required: false
          schema:
            $ref: '#/definitions/CloneTemplateRequest'
      responses:
        200:
          description: Repository cloned successfully
          schema:
            $ref: '#/definitions/StandardResponse'
        401:
          description: Invalid GitHub token
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Failed to clone template
          schema:
            $ref: '#/definitions/ErrorResponse'

  /get_schema:
    get:
      summary: Get External API Schema
      description: Retrieve schema information from an external API endpoint
      operationId: getExternalSchema
      tags:
        - Utilities
      parameters:
        - name: url
          in: query
          description: URL of the external API endpoint to analyze
          required: true
          type: string
          format: uri
      responses:
        200:
          description: Schema retrieved successfully
          schema:
            $ref: '#/definitions/StandardResponse'
        400:
          description: Invalid URL format
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Network error retrieving schema
          schema:
            $ref: '#/definitions/ErrorResponse'

  /health:
    get:
      summary: Health Check
      description: API health status for monitoring
      operationId: healthCheck
      tags:
        - General
      responses:
        200:
          description: API is healthy
          schema:
            $ref: '#/definitions/StandardResponse'

  /logout:
    get:
      summary: Logout
      description: Clear authentication session
      operationId: logout
      tags:
        - Authentication
      responses:
        200:
          description: Successfully logged out
          schema:
            $ref: '#/definitions/StandardResponse'

  # Debug Endpoints
  /debug/oauth-url:
    get:
      summary: Debug OAuth URL
      description: Debug endpoint to view OAuth configuration
      operationId: debugOAuthUrl
      tags:
        - Debug
      responses:
        200:
          description: OAuth URL configuration
          schema:
            type: object

  /debug/token-exchange:
    get:
      summary: Debug Token Exchange
      description: Debug endpoint for token exchange process
      operationId: debugTokenExchange
      tags:
        - Debug
      parameters:
        - name: code
          in: query
          required: true
          type: string
      responses:
        200:
          description: Token exchange debug information
          schema:
            type: object

  /debug/token-permissions:
    get:
      summary: Debug Token Permissions
      description: Debug endpoint to check token permissions and scopes
      operationId: debugTokenPermissions
      tags:
        - Debug
      responses:
        200:
          description: Token permissions information
          schema:
            type: object

  /debug/oauth-flow:
    get:
      summary: Debug OAuth Flow
      description: Complete OAuth flow debugging information
      operationId: debugOAuthFlow
      tags:
        - Debug
      responses:
        200:
          description: OAuth flow debug information
          schema:
            type: object

definitions:
  StandardResponse:
    type: object
    required:
      - success
      - message
    properties:
      success:
        type: boolean
        description: Indicates if the operation was successful
      message:
        type: string
        description: Human-readable message
      data:
        type: object
        description: Response data
      error_code:
        type: string
        description: Error code if applicable

  ErrorResponse:
    type: object
    required:
      - success
      - message
    properties:
      success:
        type: boolean
        description: Operation failed
        default: false
      message:
        type: string
        description: Error message
      error_code:
        type: string
        description: HTTP status code as string

  ModifyRepoRequest:
    type: object
    required:
      - repo_name
      - file_path
      - file_content
    properties:
      repo_name:
        type: string
        description: Name of the repository to modify
      file_path:
        type: string
        description: Path to the file in the repository
      file_content:
        type: string
        description: Content to write to the file

  CloneTemplateRequest:
    type: object
    properties:
      template_owner:
        type: string
        description: Owner of the template repository
        default: boddev
      template_repo:
        type: string
        description: Name of the template repository
        default: GraphConnectorApiTemplate
      new_repo_name:
        type: string
        description: Name for the new repository
        default: myGcTemplate

  GitHubUser:
    type: object
    properties:
      login:
        type: string
        description: GitHub username
      name:
        type: string
        description: User's display name
      id:
        type: integer
        description: GitHub user ID
      avatar_url:
        type: string
        description: URL to user's avatar image

tags:
  - name: General
    description: General API information and health checks
  - name: Authentication
    description: GitHub OAuth authentication endpoints
  - name: Repository Operations
    description: GitHub repository management operations
  - name: Utilities
    description: Utility endpoints for external integrations
  - name: Debug
    description: Debug endpoints for troubleshooting